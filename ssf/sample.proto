syntax = "proto3";

package ssf;

message SSFTag {
  string name = 1;
  string value = 2;
}

message SSFSample {
  enum Metric {
      COUNTER = 0;
      GAUGE = 1;
      HISTOGRAM = 2;
      SET = 3;
      STATUS = 4;
  }
  enum Status {
      OK = 0;
      WARNING = 1;
      CRITICAL = 2;
      UNKNOWN = 3;
  }

  // The underlying type of the metric
  Metric metric = 1;

  // no spaces, but . is allowed
  // e.g.: veneur.bar.baz
  string name = 2;
  float value = 3;
  int64 timestamp = 4;
  string message = 5;
  Status status = 6;
  float sample_rate = 7;
  repeated SSFTag tags = 8;
  string unit = 9;
}

message SSFSpan {
  int32 version = 1;
  // the trace_id is the (span) id of the root span
  int64 trace_id = 2;
  // the id for this span
  int64 id = 3;
  // the (span) id of the direct parent,
  // if this span is not a root span
  int64 parent_id = 4;

  int64 start_timestamp = 5;
  int64 end_timestamp = 6;

  bool error = 7;

  // The name of the service
  // e.g. "veneur"
  string service = 8;

  // The thing we're doing, handing a request, writing a value, etc
  string operation = 9;

  repeated SSFSample metrics = 10;
  repeated SSFTag tags = 11;
}
